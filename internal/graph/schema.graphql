# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
  "returns a list of all databases"
  databases: [String]
  "return a list of all tables"
  tables: [String]
  "returns the info of a single table"
  table(name: String): [TableInfo]
}

"Table info like field name returned from table query"
type TableInfo {
  name: String
  type: String
  nullable: String
  key: Any
  default: Any
}

type Mutation {
  "creates a database with the specified name"
  createDatabase(name: String!): SuccessResponse
  "creates a table with the specified name"
  createTable(name: String!, data: [CreateTableData!]!): CreateTableResponse
  "deletes the table by name"
  deleteTable(name: String!): SuccessResponse
  "updated the table by name"
  # updateTable(name: String!, prop: UpdateTableData): SuccessResponse
  addColumn(tableName: String!, data: AddUpdateColumnData!): SuccessResponse
  modifyColumn(tableName: String!, data: AddUpdateColumnData!): SuccessResponse
  deleteColumn(tableName: String!, data: DeleteColumnData): SuccessResponse
}

input CreateTableData {
  colName: String
  type: String
  nullable: Boolean
  default: Any
  unique: Boolean
}

type CreateTableResponse {
  "name of created table"
  created: String!
}

input AddUpdateColumnData {
  colName: String
  type: String
}

input DeleteColumnData {
  colName: String
}

type SuccessResponse {
  success: Boolean!
}

scalar Any
