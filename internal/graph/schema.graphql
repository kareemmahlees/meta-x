# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {
  "returns a list of all databases"
  databases: [String]
  "return a list of all tables"
  tables: [String]
  "returns the info of a single table"
  table(name: String): [TableInfo]
}

"Table info like field name returned from table query"
type TableInfo {
  field: String
  type: String
  null: String
  key: String
  default: Any
  extra: Any
}

type Mutation {
  "creates a database with the specified name"
  createDatabase(name: String!): CreateDatabaseResponse
  "creates a table with the specified name"
  createTable(name: String!, props: [CreateTableData!]!): CreateTableResponse
  "deletes the table by name"
  deleteTable(name: String!): SuccessResponse
  "updated the table by name"
  updateTable(name: String!, prop: UpdateTableData): SuccessResponse
}

input CreateTableData {
  colName: String
  props: CreateTableProps
}

input CreateTableProps {
  type: String
  nullable: Boolean
  default: Any
  unique: Boolean
}

input UpdateTableData {
  operation: UpdateTableProps!
}

input UpdateTableProps {
  type: UpdateTableOperationTypes!
  "an array of string that must be specified if operation type is delete"
  columnsToDelete: [String]
  "a map of column name and type that must be specified if operation type is add"
  columnsToAdd: Map
  "a map of column name and type that must be specified if operation type is modify"
  columnsToModify: Map
}

type CreateDatabaseResponse {
  "number of created records"
  success: Boolean!
}

type CreateTableResponse {
  "name of created table"
  created: String!
}

type SuccessResponse {
  success: Boolean!
}

enum UpdateTableOperationTypes {
  add
  modify
  delete
}

scalar Any
scalar Map
