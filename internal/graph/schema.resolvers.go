package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"

	"github.com/kareemmahlees/mysql-meta/internal/db"
	"github.com/kareemmahlees/mysql-meta/internal/graph/model"
)

// CreateDatabase is the resolver for the createDatabase field.
func (r *mutationResolver) CreateDatabase(ctx context.Context, name *string) (*model.CreateDatabaseResponse, error) {
	num,err := db.CreateDatabase(r.DB,*name)
	if err != nil {
		return nil, err
	}
	return &model.CreateDatabaseResponse{
		Created: &num,
	},nil
}

// Databases is the resolver for the databases field.
func (r *queryResolver) Databases(ctx context.Context) ([]*string, error) {
	dbs, err := db.ListDatabases(r.DB)
	if err != nil {
		return nil, err
	}
	var ps []*string
	for _, v := range dbs {
		db := v
		ps = append(ps, &db)
	}

	return ps, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
