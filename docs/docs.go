// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Kareem Ebrahim",
            "email": "kareemmahlees@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get info about the api",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.APIInfoResult"
                        }
                    }
                }
            }
        },
        "/database": {
            "get": {
                "description": "list databases",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Databases"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListDatabasesResp"
                        }
                    }
                }
            },
            "post": {
                "description": "create pg/mysql database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "description": "only supported for pg and mysql, because attached sqlite dbs are temporary",
                        "name": "pg_mysql_db_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePgMySqlDBPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResp"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "check application health by getting current date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.HealthCheckResult"
                        }
                    }
                }
            }
        },
        "/table": {
            "get": {
                "description": "list tables",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListTablesResp"
                        }
                    }
                }
            }
        },
        "/table/{tableName}": {
            "post": {
                "description": "create table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create table data",
                        "name": "tableData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTablePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTableResp"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResp"
                        }
                    }
                }
            }
        },
        "/table/{tableName}/column/add": {
            "post": {
                "description": "Add column to table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "column data",
                        "name": "columnData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddModifyColumnPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResp"
                        }
                    }
                }
            }
        },
        "/table/{tableName}/column/delete": {
            "delete": {
                "description": "Delete/Drop table column",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "column name",
                        "name": "columnData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteColumnPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResp"
                        }
                    }
                }
            }
        },
        "/table/{tableName}/column/modify": {
            "put": {
                "description": "Update table column",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "column data",
                        "name": "columnData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddModifyColumnPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResp"
                        }
                    }
                }
            }
        },
        "/table/{tableName}/describe": {
            "get": {
                "description": "Get detailed info about a specific table",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tables"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TableInfoResp"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.APIInfoResult": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "handlers.HealthCheckResult": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                }
            }
        },
        "models.AddModifyColumnPayload": {
            "type": "object",
            "required": [
                "column_name",
                "type"
            ],
            "properties": {
                "column_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.CreatePgMySqlDBPayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateTablePayload": {
            "type": "object",
            "required": [
                "column_name",
                "type"
            ],
            "properties": {
                "column_name": {
                    "type": "string"
                },
                "default": {},
                "nullable": {},
                "type": {
                    "type": "string"
                },
                "unique": {}
            }
        },
        "models.CreateTableResp": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                }
            }
        },
        "models.DeleteColumnPayload": {
            "type": "object",
            "required": [
                "column_name"
            ],
            "properties": {
                "column_name": {
                    "type": "string"
                }
            }
        },
        "models.ListDatabasesResp": {
            "type": "object",
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ListTablesResp": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SuccessResp": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.TableInfoResp": {
            "type": "object",
            "properties": {
                "default": {},
                "key": {},
                "name": {
                    "type": "string"
                },
                "nullable": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "routes.APIInfoResult": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routes.HealthCheckResult": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.1",
	Host:             "localhost:5522",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MetaX",
	Description:      "A RESTFull and GraphQL API to supercharge your database",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
