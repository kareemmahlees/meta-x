components:
  schemas:
    handlers.APIInfoResult:
      properties:
        author:
          type: string
        contact:
          type: string
        repo:
          type: string
        yeaer:
          type: integer
      type: object
    handlers.HealthCheckResult:
      properties:
        date:
          type: string
      type: object
    models.AddModifyColumnPayload:
      properties:
        column_name:
          type: string
        type:
          type: string
      required:
      - column_name
      - type
      type: object
    models.CreateTablePayload:
      properties:
        column_name:
          type: string
        default: {}
        nullable: {}
        type:
          type: string
        unique: {}
      required:
      - column_name
      - type
      type: object
    models.CreateTableResp:
      properties:
        created:
          type: string
      type: object
    models.DeleteColumnPayload:
      properties:
        column_name:
          type: string
      required:
      - column_name
      type: object
    models.ListDatabasesResp:
      properties:
        databases:
          items:
            type: string
          type: array
      type: object
    models.ListTablesResp:
      properties:
        tables:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    models.SuccessResp:
      properties:
        success:
          type: boolean
      type: object
    models.TableInfoResp:
      properties:
        default: {}
        key: {}
        name:
          type: string
        nullable:
          type: string
        type:
          type: string
      type: object
externalDocs:
  description: ""
  url: ""
info:
  contact:
    email: kareemmahlees@gmail.com
    name: Kareem Ebrahim
  description: A RESTFull and GraphQL API to supercharge your database
  title: MetaX
  version: 0.1.1
openapi: 3.1.0
paths:
  /:
    get:
      description: get info about the api
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.APIInfoResult'
          description: OK
      tags:
      - default
  /database:
    get:
      description: list databases
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ListDatabasesResp'
          description: OK
      tags:
      - Databases
  /health:
    get:
      description: check application health by getting current date
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.HealthCheckResult'
          description: OK
      tags:
      - default
  /table:
    get:
      description: list tables
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ListTablesResp'
          description: OK
      tags:
      - Tables
  /table/{tableName}:
    delete:
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.SuccessResp'
          description: OK
      tags:
      - Tables
    post:
      description: create table
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.CreateTablePayload'
        description: create table data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.CreateTableResp'
          description: Created
      tags:
      - Tables
  /table/{tableName}/column/add:
    post:
      description: Add column to table
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AddModifyColumnPayload'
        description: column data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.SuccessResp'
          description: Created
      tags:
      - Tables
  /table/{tableName}/column/delete:
    delete:
      description: Delete/Drop table column
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.DeleteColumnPayload'
        description: column name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.SuccessResp'
          description: OK
      tags:
      - Tables
  /table/{tableName}/column/modify:
    put:
      description: Update table column
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AddModifyColumnPayload'
        description: column data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.SuccessResp'
          description: OK
      tags:
      - Tables
  /table/{tableName}/describe:
    get:
      description: Get detailed info about a specific table
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/models.TableInfoResp'
                type: array
          description: OK
      tags:
      - Tables
servers:
- description: Home town of Meta-X
  url: localhost:5522
