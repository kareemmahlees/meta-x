basePath: /
definitions:
  lib.CreateTableProps:
    properties:
      default: {}
      nullable: {}
      type:
        enum:
        - text
        - number
        - date
        type: string
      unique: {}
    required:
    - type
    type: object
  lib.UpdateTableProps:
    properties:
      operation:
        properties:
          data: {}
          type:
            enum:
            - add
            - modify
            - delete
            type: string
        required:
        - data
        - type
        type: object
    required:
    - operation
    type: object
  models.CreateDatabaseResult:
    properties:
      created:
        type: integer
    type: object
  models.CreatePgMySqlDBPayload:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.ListDatabasesResult:
    properties:
      databases:
        items:
          type: string
        type: array
    type: object
  routes.APIInfoResult:
    properties:
      author:
        type: string
      contact:
        type: string
      repo:
        type: string
      year:
        type: integer
    type: object
  routes.HandleCreateTableBody:
    properties:
      colName:
        $ref: '#/definitions/lib.CreateTableProps'
    type: object
  routes.HandleCreateTableResp:
    properties:
      created:
        type: string
    type: object
  routes.HandleListTablesResp:
    properties:
      tables:
        items:
          type: string
        type: array
    type: object
  routes.HandleUpdateDeleteResp:
    properties:
      success:
        type: boolean
    type: object
  routes.HealthCheckResult:
    properties:
      date:
        type: string
    type: object
host: localhost:5522
info:
  contact:
    email: kareemmahlees@gmail.com
    name: Kareem Ebrahim
  description: A RESTFull and GraphQL API to manage your MySQL DB
  title: MySQL Meta
  version: "1.0"
paths:
  /:
    get:
      description: get info about the api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.APIInfoResult'
      tags:
      - default
  /databases:
    get:
      description: list databases
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListDatabasesResult'
      tags:
      - Databases
    post:
      consumes:
      - application/json
      description: create pg/mysql database
      parameters:
      - description: only supported for pg and mysql, because attached sqlite dbs
          are temporary
        in: body
        name: pgMysqlDatabaseData
        required: true
        schema:
          $ref: '#/definitions/models.CreatePgMySqlDBPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateDatabaseResult'
      tags:
      - Databases
  /health:
    get:
      description: check application health by getting current date
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.HealthCheckResult'
      tags:
      - default
  /tables:
    get:
      description: list tables
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.HandleListTablesResp'
      tags:
      - Tables
  /tables/{tableName}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.HandleUpdateDeleteResp'
      tags:
      - Tables
    post:
      consumes:
      - application/json
      description: create table
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        type: string
      - description: create table data
        in: body
        name: tableData
        required: true
        schema:
          $ref: '#/definitions/routes.HandleCreateTableBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/routes.HandleCreateTableResp'
      tags:
      - Tables
    put:
      consumes:
      - application/json
      description: update table
      parameters:
      - description: table name
        in: path
        name: tableName
        required: true
        type: string
      - description: update table data
        in: body
        name: tableData
        required: true
        schema:
          $ref: '#/definitions/lib.UpdateTableProps'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.HandleUpdateDeleteResp'
      tags:
      - Tables
swagger: "2.0"
